job_gcc_amd64:
  script:
    - ./autogen.sh
    - ./configure CXX="ccache g++" PYTHON=python3 --prefix=$PWD/install --with-python-module-path=$PWD/install/site-packages CXXFLAGS="-O3 -flto=12" LDFLAGS="-flto=12"
    - CCACHE_BASEDIR=$PWD make $MAKEOPTS
    - make install
    - export PYTHONPATH=$PWD/install/site-packages
    - cd doc; python3 /usr/bin/sphinx-build -b doctest . build *.rst
  tags:
    - amd64
  except:
    - tags

job_clang_amd64:
  script:
    - ./autogen.sh
    - ./configure CXX="ccache clang++" PYTHON=python3 --prefix=$PWD/install --with-python-module-path=$PWD/install/site-packages CXXFLAGS="-O3 -flto" LDFLAGS="-flto"
    - CCACHE_BASEDIR=$PWD make $MAKEOPTS
    - make install
    - export PYTHONPATH=$PWD/install/site-packages
    - cd doc; python3 /usr/bin/sphinx-build -b doctest . build *.rst
  tags:
    - amd64
  except:
    - tags

build_tarball:
  script:
    - ./autogen.sh
    - ./configure
    - make dist-bzip2
    - make dist-xz
    - bunzip2 -k *bz2
    - zstd *.tar
  only:
    - tags
  artifacts:
    paths:
      - graph-tool*bz2
      - graph-tool*xz
      - graph-tool*zst

build_sid:
  script:
    - BASE=debian:sid
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_bullseye:
  script:
    - BASE=debian:bullseye
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_buster:
  script:
    - BASE=debian:buster
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_bionic:
  script:
    - BASE=ubuntu:bionic
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_disco:
  script:
    - BASE=ubuntu:disco
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_eoan:
  script:
    - BASE=ubuntu:eoan
    - img=`echo $BASE | sed s/:/_/`
    - cd release/debian
    - docker build --build-arg BASE=$BASE --build-arg REF=`git log -n1 --pretty='%H'` -t $img .
    - docker run -v $PWD:/mount $img tar -c build | tar x
  only:
    - tags
  artifacts:
    paths:
      - release/debian/build/*

build_docker:
  script:
    - cd release/docker
    - docker build --build-arg REF=`git log -n1 --pretty='%H'` -t tiagopeixoto/graph-tool .
  only:
    - tags
